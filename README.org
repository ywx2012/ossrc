* 《穿越操作系统迷雾》源码

经作者同意，上传到GitHub。仅供学习交流使用，分享转载请保留作者版权声明。

可以前往[[https://book.douban.com/subject/36560814/][豆瓣]]和作者讨论交流。

** 仓库说明

Tags下面放的是完全没有任何改动的纯净版原始源码。

~main~ 分支如无必要，不对原始代码进行任何改动。

~mob~ 分支已经改的面目全非，连截图都不同了，毫无参考价值，请勿参考。

** 截图

#+CAPTION: Screenshot
#+NAME: fig:screenshot
[[./screenshot.png]]

** ~mob~ 分支说明

只支持QEMU，不支持kvmtool

尽量把编译警告都打开，目前还有 ~-fanalyzer~ 这些解决不了。

能用系统自带的头文件，就避免自己定义。

只要能用C语言实现，就避免用汇编。能用内联汇编就不用单独的汇编文件。内核还需要header.S，有两大原因

- __setup_sects是linker脚本算出来的，C语言里不好引用。
- 因为直接从16位跳到64位，必须得有页表。而pml4内容需要对pml3地址作一些运算，C语言不支持。

根据e820内容找出能用的内存区域，事实并不能假设从内核末尾到最高可用内存物理地址之间都是可用的。

直接用BIOS的字体，而不是在C语言代码里写字符点阵。

** 编译运行
:PROPERTIES:
:header-args: :mkdirp yes
:END:

~make run~ 运行

**** Alpine

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/alpine
apk add make gcc cpio musl-dev linux-headers
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/alpine
apk add qemu-system-x86_64
#+END_SRC

**** ALT

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/alt
apt-get install make gcc cpio
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/alt
apt-get install qemu-system-x86-core
#+END_SRC

**** ArchLinux

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/archlinux
pacman -S make gcc cpio
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/archlinux
pacman -S qemu-system-x86
#+END_SRC

**** CentOS

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/centos
dnf install --setopt=install_weak_deps=False make gcc cpio
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/centos
dnf install --setopt=install_weak_deps=False qemu-kvm
#+END_SRC

**** Debian

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/debian
apt-get --no-install-recommends install make gcc cpio libc6-dev
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/debian
apt-get --no-install-recommends install qemu-system-x86
#+END_SRC

**** Fedora

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/fedora
dnf install --setopt=install_weak_deps=False make gcc cpio
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/fedora
dnf install --setopt=install_weak_deps=False qemu-system-x86-core
#+END_SRC

**** Mageia

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/mageia
dnf install --setopt=install_weak_deps=False make gcc cpio
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/mageia
dnf install --setopt=install_weak_deps=False qemu-system-x86-core
#+END_SRC

**** openSUSE

***** 安装编译工具

gcc默认是7，至少需要10才可以

#+BEGIN_SRC sh :tangle tmp/compile/opensuse
zypper install --no-recommends make gcc10 cpio && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/opensuse
zypper install --no-recommends qemu-x86
#+END_SRC

**** Ubuntu

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/ubuntu
apt-get --no-install-recommends install make gcc cpio libc6-dev
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/ubuntu
apt-get --no-install-recommends install qemu-system-x86
#+END_SRC

**** Void

***** 安装编译工具

#+BEGIN_SRC sh :tangle tmp/compile/void
xbps-install -S make gcc cpio
#+END_SRC

***** 安装QEMU

#+BEGIN_SRC sh :tangle tmp/qemu/void
xbps-install -S qemu-system-amd64
#+END_SRC
